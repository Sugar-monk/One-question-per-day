/*************************************************************************
 *文件名: bubble.cpp
 *作者: bean
 *邮箱: 17331372728@163.com
 * 创建时间: Sun 14 Jul 2019 09:07:18 PM PDT
 * 备注:冒泡排序
 *************************************************************************/
#include<iostream>
#include<vector>
#include<algorithm>
#include<ctime>
using namespace std;
clock_t start0, end0,start1, end1, start2, end2;
void bubble2(vector<int>& arr)
{
    int size = arr.size() -1;
    int pos = size;
    for(int i = 0; i < size; ++i)
    {
        bool flag = true;
        int k = 0;
        for(int j = 0; j < pos; ++j)
        {
            if(arr[j+1] < arr[j])
            {
                flag = false;
                swap(arr[j+1], arr[j]);
                k = j;
            }
        }
        if(flag)
            return;
        pos = k;
    }
}
void bubble1(vector<int>& arr)
{
    int size = arr.size();
    for(int i = 0; i < size; ++i)
    {  
        bool flag = true;
        for(int j = 0; j < size-i-1; ++j)
        {
            if(arr[j] > arr[j+1])
            {
                flag = false;
                swap(arr[j+1], arr[j]);
            }
        }
        if(flag)
            return;
    }
}
void bubble0(vector<int>& arr)
{
    int size = arr.size();
    for(int i = 0; i < size; ++i)
    {  
        for(int j = 0; j < size-i-1; ++j)
        {
            if(arr[j] > arr[j+1])
            {
                swap(arr[j+1], arr[j]);
            }
        }
    }
}
void bubble3(vector<int>& arr)
{

    int size = arr.size() -1;
    int pos = size;
    int pos1 = 0; 
    for(int i = 0; i < size; ++i)
    {
        bool flag = true;
        int k = 0; 
        //正向冒最大值
        for(int j = 0; j < pos; ++j)
        {

            if(arr[j+1] < arr[j])
            {

                flag = false;
                swap(arr[j+1], arr[j]);
                k = j;
            }
        }
        if(flag)
            return;
        pos = k;

        //反向冒最小值
        int n = pos1;
        for(int j = k; j > pos1; --j)
        {
            if(arr[j-1] > arr[j])
            {
                swap(arr[j-1], arr[j]);
                n = j-1;
                flag = false;
            }
        }
        if(flag)
            return;
        pos1 = n;
    }
}
