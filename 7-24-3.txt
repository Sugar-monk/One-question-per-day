class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {
        if(obstacleGrid.empty() || obstacleGrid[0].empty())
            return 0;
        
        int row = obstacleGrid.size();
        int col = obstacleGrid[0].size();
        vector<vector<int> > path(row, vector<int>(col,0));
        
        for(int i = 0; i < row; ++i)
        {
            if(obstacleGrid[i][0] == 1)
                break;
           else
                path[i][0] = 1;
        }
        for(int i = 0; i < col; ++i)
        {
            if(obstacleGrid[0][i] == 1)
                break;
            else
                path[0][i] = 1;
        }
        
        
        for(int i = 1; i < row; ++i)
        {
            for(int j = 1; j < col; ++j)
            {
                if(obstacleGrid[i][j] == 1)
                    path[i][j] = 0;
                else
                    path[i][j] = path[i][j-1] + path[i-1][j];
            }
        }
        
        return path[row-1][col-1];
    }
};