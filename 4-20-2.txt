#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

int  getLuckBox(vector<int> x, size_t n, size_t pos, int sum, int multi)
{
	int count = 0;
	for (size_t i = pos; i < n; ++i)
	{
		sum += x[i];
		multi *= x[i];
		if (sum > multi)
		{
			//如果当前位置可以满足要求，就继续从下一个位置开始
			count += 1 + getLuckBox(x, n, i + 1, sum, multi);
		}
		else if (x[i] == 1)
		{
			//如果这个位置是1并且不满足，可以从下一个位置尝试
			count += getLuckBox(x, n, i + 1, sum, multi);
		}
		else
		{
			//如果当前位置不满足，那么之后更大的数字也不可能满足，直接直接返回，不再查找
			break;
		}
		//在搜索下一个位置前，要先恢复sum和multi

		sum -= x[i];
		multi /= x[i];

		//如果喝下一个位置一样，就直接跳过，不能有重复
		while (i < n - 1 && x[i] == x[i - 1])
		{
			++i;
		}
	}

	return count;
}

int main()
{
	size_t n;
	while (cin >> n)
	{
		vector<int> x;
		for (size_t i = 0; i < n; ++i)
		{
			int tmp;
			cin >> tmp;
			x.push_back(tmp);
		}

		sort(x.begin(), x.end());

		cout << getLuckBox(x, n, 0, 0, 1);
	}

	return 0;
}